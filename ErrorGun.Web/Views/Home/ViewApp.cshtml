@using ErrorGun.Web.App_Start
<div class="fourteen columns offset-by-one">
    <h3>Your Application</h3>
    <div data-bind="visible: ErrorMessage, text: ErrorMessage" class="warning alert" style="display: none"></div>
    <form class="form-inline" data-bind="submit: LoadApp" autocomplete="off">
        <label for="apiKey">API Key: </label>
        <input type="text" id="apiKey" data-bind="value: ApiKey" class="wide" autocomplete="off" />
        <button type="submit" name="Load" value="Load" id="load" data-bind="disable: Working, css: { loading: Working }">Load</button>
    </form>
    <div data-bind="visible: AppLoaded" style="display: none">
        <div class="boxed">
            <ul>
                <li><strong>ID: </strong><span data-bind="text: Id"></span></li>
                <li><strong>Name: </strong><span data-bind="text: Name"></span></li>
                <li><strong>API Key: </strong><span data-bind="text: ApiKey"></span></li>
                <li><strong>Created: </strong><span data-bind="text: CreatedTimestampUtc"></span></li>
                <li><strong>Contact Emails: </strong><span data-bind="text: ContactEmailsFlat()"></span></li>
                <li><strong>Error Reports:</strong> <button name="LoadErrors" class="small" data-bind="click: LoadErrors, disable: Working">Load</button></li>
            </ul>
            <div data-bind="visible: ErrorReports().length > 0, template: { name: 'errorreport', foreach: ErrorReports }" class="clearfix" style="display: none">
                <script type="text/html" id="errorreport">
                    <div class="six columns card">
                        <h5 data-bind="text: Id"></h5>
                        Reported: <span data-bind="text: ReportedTimestampUtc" class="card-value"></span><br/>
                        Message: <span data-bind="text: Message" class="card-value"></span><br/>
                        Category: <span data-bind="text: Category" class="card-value"></span><br/>
                        Source: <span data-bind="text: Source" class="card-value"></span><br/>
                        User Email: <span data-bind="text: UserEmail" class="card-value"></span><br/>
                        Detail:<span data-bind="text: Detail" class="card-detail"></span>
                    </div>
                    <br data-bind="css: {clear: $index() % 2 === 1}, visible: $index() % 2 === 1"/>
                </script>
            </div>
            <div data-bind="visible: ErrorReportPageCount() > 0">
                <button class="small" data-bind="click: PrevErrorReportPage, enable: !Working() && ErrorReportPage() > 1"><i class="icon-backward"></i> Prev</button>
                Page <span data-bind="text: ErrorReportPage"></span> of <span data-bind="text: ErrorReportPageCount"></span>
                <button class="small" data-bind="click: NextErrorReportPage, enable: !Working() && ErrorReportPage() < ErrorReportPageCount()"><i class="icon-forward"></i> Next</button>
            </div>
        </div>
        <div class="boxed" data-bind="visible: AppLoaded">
            <h4>Send Test Error Report</h4>
            <form data-bind="submit: SendTestErrorReport">
                <div class="fourteen columns alpha clearfix">
                    <div class="four columns alpha">
                        <label for="message">Message</label>
                        <input data-bind="value: Message" type="text" id="message" />
                
                        <label for="category">Category</label>
                        <input data-bind="value: Category" type="text" id="category" />
                
                        <label for="source">Source</label>
                        <input data-bind="value: Source" type="text" id="source" />
                
                        <label for="userEmail">User Email</label>
                        <input data-bind="value: UserEmail" type="text" id="userEmail" />
                    </div>
                    <div class="ten columns omega">
                        <label for="detail">Detail</label>
                        <textarea data-bind="value: Detail" id="detail" cols="50" rows="14" class="wide"></textarea>
                    </div>
                </div>
                <button data-bind="click: ClearErrorReport" name="Clear" value="Clear" class="remove-bottom"><i class="icon-repeat"></i> Clear</button>
                <button type="submit" name="Send" value="Send" class="remove-bottom" data-bind="disable: Working, css: { loading: Working }"><i class="icon-share-alt"></i> Send</button>
            </form>
            <div data-bind="visible: ReportedErrorId" style="display: none">
                Error successfully reported: <span data-bind="text: ReportedErrorId"></span>
            </div>
            <div data-bind="visible: ErrorMessageSend" style="display: none">
                Failed to send report: <span data-bind="text: ErrorMessageSend"></span>
            </div>
        </div>
    </div>
</div>

@section EndBodyScripts {
    @Scripts.Render(AppScript.HomeView)
    <script type="text/javascript">
        var viewModel = new ErrorGun.ViewModels.AppView();
        ko.applyBindings(viewModel);

        $(function() {
            $('#load')
                .ajaxStart(function() { viewModel.Working(true); })
                .ajaxStop(function() { viewModel.Working(false); });

            // subscribe to ErrorReports changing so we can display
            // overflow toggles
            viewModel.ErrorReports.subscribe(function(newValue) {
                $('span.card-detail').each(function(index, value) {
                    var isOverflowing = value.clientHeight < value.scrollHeight;
                    if (isOverflowing) {
                        var parent = $(value).parent().get(0);
                        $(parent).append("<button class='overflow-toggle small'><i class='icon-chevron-down'></i> &#8230;</button>");
                    }
                });
            });

            $(document).on('click', 'button.overflow-toggle', function () {
                var $this = $(this);
                var $detailSpan = $this.prev();
                var $icon = $this.children(':first');
                var currMaxHeight = $detailSpan.css('max-height');
                
                var newMaxHeight = currMaxHeight == 'none' ? '150px' : 'none';
                $detailSpan.css('max-height', newMaxHeight);

                var newIconClass = currMaxHeight == 'none' ? 'icon-chevron-down' : 'icon-chevron-up';
                $icon.removeClass('icon-chevron-up icon-chevron-down').addClass(newIconClass);
            });

            $('#apiKey').focus();
        });
    </script>
}
